name: OnPushToMain
# v1 - 3/22/2023
#   install
#   build, lint, test
#   coverage badge
#   create release
#   publish

on:
  push:
    branches: [main]

jobs:
  check-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Conventional Commits (dkhunt27)
        uses: dkhunt27/action-conventional-commits@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: bahmutov/npm-install@v1

      - name: Build
        run: yarn build

      - name: Lint
        run: yarn lint:prod

      - name: Test
        run: yarn test:coverage

      # - if: ${{ matrix.node-version == '18.x' }}
      #   name: Build Docs
      #   run: yarn docs

      # https://dev.to/thejaredwilcurt/coverage-badge-with-github-actions-finally-59fa
      - if: ${{ matrix.node-version == '18.x' }}
        name: Get Coverage for badge
        run: |
          yarn test:coverage --coverageReporters="json-summary"
          COVERAGE=$(cat .coverage/coverage-summary.json | yarn json total.lines.pct | tail -2 | head -1)
          echo "COVERAGE=$COVERAGE"
          echo "COVERAGE=$(echo ${COVERAGE})" >> $GITHUB_ENV
          REF=${{ github.ref }}
          echo "github.ref: $REF"
          IFS='/' read -ra PATHS <<< "$REF"
          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          echo "BRANCH_NAME=$BRANCH_NAME"
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV

      - if: ${{ matrix.node-version == '18.x' }}
        name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET_FOR_COVERAGE_BADGES }}
          gistID: e35a3788f0a2b9faec15f7869073a515
          filename: environment-configuration__${{ env.BRANCH }}.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: jest

      # - if: ${{ matrix.node-version == '18.x' }}
      #   name: Minify
      #   run: yarn minify

      - if: ${{ matrix.node-version == '18.x' }}
        name: Semantic Release
        id: semanticRelease
        uses: dkhunt27/semantic-release-action@v3.2.0-beta1
        with:
          semantic_version: 18
          dry_run: 'false'
          branches: 'main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - if: ${{ matrix.node-version == '18.x' }}
        name: Annotate release
        uses: dkhunt27/action-annotations@v1
        with:
          type: notice
          msg: Released ${{ steps.semanticRelease.outputs.new_release_version }}

      # this is not needed, Semantic Release is also publishing to npm
      # - if: ${{ matrix.node-version == '18.x' }}
      #   name: Publish
      #   uses: JS-DevTools/npm-publish@v1
      #   with:
      #     token: ${{ secrets.NPM_TOKEN }}
